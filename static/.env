GEMINI_API_KEY=AIzaSyBdnLfnPld5kPdL1PVDqvdA_j8j2YlQ-zs
# Flask config
SECRET_KEY=da53935991f25e355661ee37cc55fa787bed2514db8320ec3aabdbe033a73236
FLASK_DEBUG=True

# Database config
DATABASE_URI=sqlite:///bittasker.db  # Or a PostgreSQL/MySQL URI for production Then you would switch to PostgreSQL, MySQL, or a managed service like Supabase or Railway.

# Example for PostgreSQL:

# env
# Copy
# Edit
# DATABASE_URI=postgresql://username:password@host:port/dbname

# Bitcoin + Lightning config
BITCOIN_TESTNET=True  # or False in production
BLOCKCHAIN_API_KEY= #leave empty
 #Go to: https://accounts.blockcypher.com/signup

# Create an account.

# After logging in, go to the API Tokens section and click “Create New Token”
# Option 1: Self-hosted LND
# Spin up LND or use Polar for local dev.

# Set:

# env
# Copy
# Edit
# LIGHTNING_NODE_URL=https://your-lnd-node:8080
# LIGHTNING_MACAROON=your_hex_macaroon
# LIGHTNING_API_KEY=  # leave empty unless using a proxy that needs it
# Option 2: Cloud Lightning services
# Use a provider like:

# Voltage

# LNBITS

# Greenlight by Blockstream

# They give you:

# A public node URL (WebSocket or REST)

# A macaroon or API key

# Then configure .env like:

# env
# Copy
# Edit
# LIGHTNING_NODE_URL=https://api.voltage.cloud/your-node
# LIGHTNING_API_KEY=your_api_key_here
# LIGHTNING_MACAROON=your_macaroon_base64_or_hex

LIGHTNING_NODE_URL=https://your.lightning.node
LIGHTNING_API_KEY=your-lightning-api-key
LIGHTNING_MACAROON=your-macaroon-token-or-base64


